ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccimX0GL.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"FloatToChar.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.float_char,"ax",%progbits
  18              		.align	1
  19              		.global	float_char
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	float_char:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "Core/Src/FloatToChar.c"
   1:Core/Src/FloatToChar.c **** #include "FloatToChar.h"
   2:Core/Src/FloatToChar.c **** //want to take the floating point rounded to 2 decimal places
   3:Core/Src/FloatToChar.c **** //and convert it to char to be printed to the lcd
   4:Core/Src/FloatToChar.c **** //This can be done by add the float to '0'
   5:Core/Src/FloatToChar.c **** void float_char(char *buff, const float y)
   6:Core/Src/FloatToChar.c **** {
  30              		.loc 1 6 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 6 1 is_stmt 0 view .LVU1
  36 0000 70B4     		push	{r4, r5, r6}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 6, -4
   7:Core/Src/FloatToChar.c ****     //deal with decimals and units in front of decimal point
   8:Core/Src/FloatToChar.c ****     //decimals
   9:Core/Src/FloatToChar.c ****     int dec; 
  42              		.loc 1 9 5 is_stmt 1 view .LVU2
  10:Core/Src/FloatToChar.c ****     //units in front of decimal
  11:Core/Src/FloatToChar.c ****     int units;
  43              		.loc 1 11 5 view .LVU3
  12:Core/Src/FloatToChar.c ****     //have to consider negative floats as well 
  13:Core/Src/FloatToChar.c ****     //dealing with floats from -99->99
  14:Core/Src/FloatToChar.c ****     //dealing with units left of decimal first positive and negative
  15:Core/Src/FloatToChar.c ****     if(y<0)
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccimX0GL.s 			page 2


  44              		.loc 1 15 5 view .LVU4
  45              		.loc 1 15 7 is_stmt 0 view .LVU5
  46 0002 B5EEC00A 		vcmpe.f32	s0, #0
  47 0006 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  48 000a 47D4     		bmi	.L8
  16:Core/Src/FloatToChar.c ****     {
  17:Core/Src/FloatToChar.c ****         //only want to deal with max 4 digits
  18:Core/Src/FloatToChar.c ****         dec = (int)(y*-100)%100;
  19:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
  20:Core/Src/FloatToChar.c ****         *buff = '-';
  21:Core/Src/FloatToChar.c ****         buff++;
  22:Core/Src/FloatToChar.c ****       
  23:Core/Src/FloatToChar.c ****     }
  24:Core/Src/FloatToChar.c ****     else 
  25:Core/Src/FloatToChar.c ****     {
  26:Core/Src/FloatToChar.c ****         dec = (int)(y*100)%100;
  49              		.loc 1 26 9 is_stmt 1 view .LVU6
  50              		.loc 1 26 22 is_stmt 0 view .LVU7
  51 000c DFED317A 		vldr.32	s15, .L9
  52 0010 60EE277A 		vmul.f32	s15, s0, s15
  53              		.loc 1 26 15 view .LVU8
  54 0014 FDEEE77A 		vcvt.s32.f32	s15, s15
  55 0018 17EE903A 		vmov	r3, s15	@ int
  56              		.loc 1 26 13 view .LVU9
  57 001c 2E4A     		ldr	r2, .L9+4
  58 001e 82FB0312 		smull	r1, r2, r2, r3
  59 0022 D917     		asrs	r1, r3, #31
  60 0024 C1EB6212 		rsb	r2, r1, r2, asr #5
  61 0028 6421     		movs	r1, #100
  62 002a 01FB1232 		mls	r2, r1, r2, r3
  63              	.LVL1:
  27:Core/Src/FloatToChar.c ****         units = (int)(y*1);
  64              		.loc 1 27 9 is_stmt 1 view .LVU10
  65              		.loc 1 27 15 is_stmt 0 view .LVU11
  66 002e FDEEC07A 		vcvt.s32.f32	s15, s0
  67 0032 17EE903A 		vmov	r3, s15	@ int
  68              	.LVL2:
  69              	.L4:
  28:Core/Src/FloatToChar.c ****     }
  29:Core/Src/FloatToChar.c ****     //only need 4 values, easiest way to do this is line by line since looking for specific output.
  30:Core/Src/FloatToChar.c ****     //*buff++ == assign value to dereferenced pointer then increment pointer
  31:Core/Src/FloatToChar.c ****     
  32:Core/Src/FloatToChar.c ****     
  33:Core/Src/FloatToChar.c ****         *buff++=(units/10)%10 + '0';
  70              		.loc 1 33 9 is_stmt 1 view .LVU12
  71              		.loc 1 33 23 is_stmt 0 view .LVU13
  72 0036 294D     		ldr	r5, .L9+8
  73 0038 85FB0341 		smull	r4, r1, r5, r3
  74 003c DC17     		asrs	r4, r3, #31
  75 003e C4EBA104 		rsb	r4, r4, r1, asr #2
  76              		.loc 1 33 27 view .LVU14
  77 0042 85FB0416 		smull	r1, r6, r5, r4
  78 0046 E117     		asrs	r1, r4, #31
  79 0048 C1EBA601 		rsb	r1, r1, r6, asr #2
  80 004c 01EB8101 		add	r1, r1, r1, lsl #2
  81 0050 A4EB4101 		sub	r1, r4, r1, lsl #1
  82              	.LVL3:
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccimX0GL.s 			page 3


  83              		.loc 1 33 31 view .LVU15
  84 0054 3031     		adds	r1, r1, #48
  85              		.loc 1 33 16 view .LVU16
  86 0056 0170     		strb	r1, [r0]
  34:Core/Src/FloatToChar.c ****         *buff++=units%10 + '0';
  87              		.loc 1 34 9 is_stmt 1 view .LVU17
  88              		.loc 1 34 22 is_stmt 0 view .LVU18
  89 0058 04EB8404 		add	r4, r4, r4, lsl #2
  90 005c A3EB4403 		sub	r3, r3, r4, lsl #1
  91              	.LVL4:
  92              		.loc 1 34 26 view .LVU19
  93 0060 3033     		adds	r3, r3, #48
  94              		.loc 1 34 16 view .LVU20
  95 0062 4370     		strb	r3, [r0, #1]
  35:Core/Src/FloatToChar.c ****         *buff++='.';
  96              		.loc 1 35 9 is_stmt 1 view .LVU21
  97              	.LVL5:
  98              		.loc 1 35 16 is_stmt 0 view .LVU22
  99 0064 2E23     		movs	r3, #46
 100 0066 8370     		strb	r3, [r0, #2]
  36:Core/Src/FloatToChar.c ****         *buff++=(dec/10)%10 + '0';
 101              		.loc 1 36 9 is_stmt 1 view .LVU23
 102              		.loc 1 36 21 is_stmt 0 view .LVU24
 103 0068 85FB0213 		smull	r1, r3, r5, r2
 104 006c D117     		asrs	r1, r2, #31
 105 006e C1EBA301 		rsb	r1, r1, r3, asr #2
 106              		.loc 1 36 25 view .LVU25
 107 0072 85FB0135 		smull	r3, r5, r5, r1
 108 0076 CB17     		asrs	r3, r1, #31
 109 0078 C3EBA503 		rsb	r3, r3, r5, asr #2
 110 007c 03EB8303 		add	r3, r3, r3, lsl #2
 111 0080 A1EB4303 		sub	r3, r1, r3, lsl #1
 112              	.LVL6:
 113              		.loc 1 36 29 view .LVU26
 114 0084 3033     		adds	r3, r3, #48
 115              		.loc 1 36 16 view .LVU27
 116 0086 C370     		strb	r3, [r0, #3]
  37:Core/Src/FloatToChar.c ****         *buff++=dec%10 + '0';
 117              		.loc 1 37 9 is_stmt 1 view .LVU28
 118              		.loc 1 37 20 is_stmt 0 view .LVU29
 119 0088 01EB8101 		add	r1, r1, r1, lsl #2
 120 008c A2EB4102 		sub	r2, r2, r1, lsl #1
 121              	.LVL7:
 122              		.loc 1 37 24 view .LVU30
 123 0090 3032     		adds	r2, r2, #48
 124              		.loc 1 37 16 view .LVU31
 125 0092 0271     		strb	r2, [r0, #4]
  38:Core/Src/FloatToChar.c ****         *buff++='\0';
 126              		.loc 1 38 9 is_stmt 1 view .LVU32
 127              	.LVL8:
 128              		.loc 1 38 16 is_stmt 0 view .LVU33
 129 0094 0023     		movs	r3, #0
 130 0096 4371     		strb	r3, [r0, #5]
  39:Core/Src/FloatToChar.c ****     
  40:Core/Src/FloatToChar.c **** }...
 131              		.loc 1 40 1 view .LVU34
 132 0098 70BC     		pop	{r4, r5, r6}
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccimX0GL.s 			page 4


 133              	.LCFI1:
 134              		.cfi_remember_state
 135              		.cfi_restore 6
 136              		.cfi_restore 5
 137              		.cfi_restore 4
 138              		.cfi_def_cfa_offset 0
 139 009a 7047     		bx	lr
 140              	.LVL9:
 141              	.L8:
 142              	.LCFI2:
 143              		.cfi_restore_state
  18:Core/Src/FloatToChar.c ****         dec = (int)(y*-100)%100;
 144              		.loc 1 18 9 is_stmt 1 view .LVU35
  18:Core/Src/FloatToChar.c ****         dec = (int)(y*-100)%100;
 145              		.loc 1 18 22 is_stmt 0 view .LVU36
 146 009c DFED107A 		vldr.32	s15, .L9+12
 147 00a0 60EE277A 		vmul.f32	s15, s0, s15
  18:Core/Src/FloatToChar.c ****         dec = (int)(y*-100)%100;
 148              		.loc 1 18 15 view .LVU37
 149 00a4 FDEEE77A 		vcvt.s32.f32	s15, s15
 150 00a8 17EE903A 		vmov	r3, s15	@ int
  18:Core/Src/FloatToChar.c ****         dec = (int)(y*-100)%100;
 151              		.loc 1 18 13 view .LVU38
 152 00ac 0A4A     		ldr	r2, .L9+4
 153 00ae 82FB0312 		smull	r1, r2, r2, r3
 154 00b2 D917     		asrs	r1, r3, #31
 155 00b4 C1EB6212 		rsb	r2, r1, r2, asr #5
 156 00b8 6421     		movs	r1, #100
 157 00ba 01FB1232 		mls	r2, r1, r2, r3
 158              	.LVL10:
  19:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
 159              		.loc 1 19 9 is_stmt 1 view .LVU39
  19:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
 160              		.loc 1 19 24 is_stmt 0 view .LVU40
 161 00be B1EE400A 		vneg.f32	s0, s0
 162              	.LVL11:
  19:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
 163              		.loc 1 19 15 view .LVU41
 164 00c2 FDEEC07A 		vcvt.s32.f32	s15, s0
 165 00c6 17EE903A 		vmov	r3, s15	@ int
 166              	.LVL12:
  20:Core/Src/FloatToChar.c ****         *buff = '-';
 167              		.loc 1 20 9 is_stmt 1 view .LVU42
  20:Core/Src/FloatToChar.c ****         *buff = '-';
 168              		.loc 1 20 15 is_stmt 0 view .LVU43
 169 00ca 2D21     		movs	r1, #45
 170 00cc 00F8011B 		strb	r1, [r0], #1
 171              	.LVL13:
  21:Core/Src/FloatToChar.c ****         buff++;
 172              		.loc 1 21 9 is_stmt 1 view .LVU44
  21:Core/Src/FloatToChar.c ****         buff++;
 173              		.loc 1 21 9 is_stmt 0 view .LVU45
 174 00d0 B1E7     		b	.L4
 175              	.L10:
 176 00d2 00BF     		.align	2
 177              	.L9:
 178 00d4 0000C842 		.word	1120403456
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccimX0GL.s 			page 5


 179 00d8 1F85EB51 		.word	1374389535
 180 00dc 67666666 		.word	1717986919
 181 00e0 0000C8C2 		.word	-1027080192
 182              		.cfi_endproc
 183              	.LFE0:
 185              		.text
 186              	.Letext0:
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccimX0GL.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 FloatToChar.c
C:\Users\pierc\AppData\Local\Temp\ccimX0GL.s:18     .text.float_char:00000000 $t
C:\Users\pierc\AppData\Local\Temp\ccimX0GL.s:26     .text.float_char:00000000 float_char
C:\Users\pierc\AppData\Local\Temp\ccimX0GL.s:178    .text.float_char:000000d4 $d

NO UNDEFINED SYMBOLS
